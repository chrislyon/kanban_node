html
	head 
		script(src='https://cdn.rawgit.com/konvajs/konva/1.0.0/konva.min.js').
		style.
			body {
			  margin: 0;
			  padding: 0;
			  overflow: hidden;
			  background-color: #C0C0C0;
			}
			#entete {
			  background-color: #F3E2A9;
			  min-height: 40px;
			  padding: 5px;
			}
	body
		//Test KONVA CHRIS
		#entete
			p 
				Center 
					h2 KANBAN BOARD
		#container
		script.
			// Fonctions
			function writeMessage(message) {
				text.setText(message);
				layer.draw();
			}

			// MAIN CODE

			var width = window.innerWidth;
			var height = window.innerHeight;
			
			var stage = new Konva.Stage({
			  container: 'container',
			  width: width,
			  height: height
			});

			var layer = new Konva.Layer();

			var step_color = [ "#777777", "#888888", "#999999", "#AAAAAA", "#BBBBBB", "#CCCCCC" ]
			var step_title = [ "Nouveau", "A Planifier", "En Cours", "En Attente", "Termin√©", "A Valider" ];

			var Step1;
			var step_larg = 300;

			for ( i = 0 ;  i < 6 ; i++ )
			{

				Step1 = new Konva.Group({
					x: i * step_larg ,
					y: 0,
					draggable: false
				});

				Step1.add( new Konva.Rect({
					x: 0,
					y: 0,
					width: step_larg,
					height: 600,
					fill: step_color[i],
					stroke: 'black',
					cornerRadius: 10
				}) );

				Step1.add( new Konva.Text({
					x: 5,
					y: 5,
					text: step_title[i],
					fontSize: 30,
					fontFamily: 'Calibri',
					fill: '#555555'
				}) );

				layer.add(Step1);
			}

			// Message 
			var text = new Konva.Text({
				x: 10,
				y: 610,
				fontFamily: 'Calibri',
				fontSize: 24,
				text: '< VIDE >',
				fill: 'black'
			});

			layer.add(text);

			// Task
			var t1 = new Konva.Group({
				x: 5,
				y: 45,
				draggable: true,
				name: 'Task1'
			});

			t1.add( new Konva.Rect({
				x: 0,
				y: 0,
				width: step_larg-10,
				height: 100,
				fill: 'yellow',
				stroke: 'black',
				cornerRadius: 10
			}) );

			t1.add( new Konva.Text({
				x: 5,
				y: 5,
				text: 'Task 1',
				fontSize: 20,
				fontFamily: 'Calibri',
				fill: 'black'
			}) );

			t1.on('dragmove', function() {
				document.body.style.cursor = 'pointer';
				});

			t1.on('mouseout', function() {
				document.body.style.cursor = 'default';
				});

			t1.on('click', function() {
				writeMessage("  CLICK  ");
			});


			t1.on('dragstart', function() {
				this.moveToTop();
				writeMessage("  DRAGSTART  ");
				});

			t1.on('dragend', function(e) {
				p_x = t1.getX() + (step_larg / 2);
				p_y = t1.getY();

				p_x = Math.floor(p_x/300) * 300;

				if ( p_x < 0 )
				{
					p_x = 0;
				}

				t1.position({
					x: p_x + 5,
					y: p_y
				});
				writeMessage("  DRAGEND " + e.target.name() + ":" + t1.getX() + "/" + t1.getY()  );
				});

			layer.add(t1);

			stage.add(layer);

